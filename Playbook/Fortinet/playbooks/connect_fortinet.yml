---
# AAP 2.5 Optimized Fortinet Connection Playbook
# Connect to Fortinet VA using AAP credentials and inventory plugins

- name: Pre-flight checks and AAP credential validation
  hosts: localhost
  gather_facts: false
  connection: local
  become: false
  vars:
    target_hosts: "{{ target_hosts | default('fortinet') }}"
    vdom: "{{ vdom | default('root') }}"
    
  tasks:
    - name: Display job execution information
      debug:
        msg:
          - "=== AAP 2.5 Fortinet Connection Job Information ==="
          - "Job Template: {{ awx_job_template_name | default('Fortinet Connection') }}"
          - "Job ID: {{ awx_job_id | default('N/A') }}"
          - "Target Group: {{ target_hosts }}"
          - "VDOM: {{ vdom }}"
          - "Started by: {{ awx_user_name | default(ansible_user_id) }}"
          - "Inventory: {{ awx_inventory_name | default('Dynamic') }}"
          - "Execution Environment: {{ awx_execution_environment | default('fortinet-ee') }}"
      tags: [always]

    - name: Validate AAP credential injection
      assert:
        that:
          - target_hosts is defined
          - target_hosts != ""
        fail_msg: "target_hosts variable must be defined and not empty"
        success_msg: "Variable validation successful"

    - name: Display credential information (secure)
      debug:
        msg:
          - "Using AAP Machine Credential for authentication"
          - "Credential Type: {{ awx_credential_type | default('Machine') }}"
          - "Username will be injected by AAP: {{ ansible_user is defined | ternary('✓', '✗') }}"
          - "Password will be injected by AAP: {{ ansible_password is defined | ternary('✓', '✗') }}"
      no_log: false  # Safe to log as we're not showing actual credentials

- name: Connect to Fortinet devices using AAP credentials
  hosts: "{{ target_hosts }}"
  gather_facts: no
  connection: httpapi
  vars:
    # These variables are automatically injected by AAP machine credentials
    # ansible_user: (provided by AAP credential)
    # ansible_password: (provided by AAP credential)
    
    # Connection settings (can be overridden by inventory)
    ansible_httpapi_use_ssl: "{{ ansible_httpapi_use_ssl | default(true) }}"
    ansible_httpapi_validate_certs: "{{ ansible_httpapi_validate_certs | default(false) }}"
    ansible_network_os: "{{ ansible_network_os | default('fortios') }}"
    ansible_httpapi_port: "{{ ansible_httpapi_port | default(443) }}"
    ansible_httpapi_timeout: "{{ ansible_httpapi_timeout | default(30) }}"
    vdom: "{{ vdom | default('root') }}"
    
  tasks:
    - name: Display device inventory information
      debug:
        msg:
          - "Device: {{ inventory_hostname }}"
          - "Host IP: {{ ansible_host }}"
          - "Device Type: {{ device_type | default('Unknown') }}"
          - "Environment: {{ environment | default('Unknown') }}"
          - "Location: {{ location | default('Unknown') }}"
          - "Model: {{ device_model | default('Unknown') }}"
      tags: [always]

    - name: Test network connectivity to Fortinet device
      wait_for:
        host: "{{ ansible_host }}"
        port: "{{ ansible_httpapi_port | default(443) }}"
        timeout: 10
      delegate_to: localhost
      vars:
        ansible_connection: local
      register: connectivity_test

    - name: Display connectivity status
      debug:
        msg: "✓ Network connectivity to {{ inventory_hostname }}:{{ ansible_httpapi_port | default(443) }} successful"
      when: connectivity_test is succeeded

    - name: Authenticate to Fortinet device using AAP credentials
      fortinet.fortios.fortios_monitor_fact:
        vdom: "{{ vdom }}"
        selector: 'system_status'
        access_token: "{{ fortinet_access_token | default(omit) }}"
      register: auth_result
      retries: 3
      delay: 5
      until: auth_result is not failed
      no_log: false  # We can log this as it doesn't contain credentials

    - name: Display authentication and device information
      debug:
        msg:
          - "✓ Authentication to {{ inventory_hostname }} successful"
          - "Device Hostname: {{ auth_result.meta.results.hostname | default('Unknown') }}"
          - "FortiOS Version: {{ auth_result.meta.results.version | default('Unknown') }}"
          - "Serial Number: {{ auth_result.meta.results.serial | default('Unknown') }}"
          - "VDOM: {{ vdom }}"
          - "HA Status: {{ auth_result.meta.results.ha_mode | default('Standalone') }}"
      when: auth_result is succeeded

    - name: Store device facts for inventory update
      set_fact:
        device_facts:
          hostname: "{{ auth_result.meta.results.hostname | default('Unknown') }}"
          version: "{{ auth_result.meta.results.version | default('Unknown') }}"
          serial: "{{ auth_result.meta.results.serial | default('Unknown') }}"
          ha_mode: "{{ auth_result.meta.results.ha_mode | default('Standalone') }}"
          last_connected: "{{ ansible_date_time.iso8601 }}"
      when: auth_result is succeeded

    - name: Log successful connection for audit
      lineinfile:
        path: /tmp/fortinet_connections.log
        line: "{{ ansible_date_time.iso8601 }} | AAP Job: {{ awx_job_id | default('N/A') }} | Device: {{ inventory_hostname }} | Status: SUCCESS | User: {{ awx_user_name | default('Unknown') }}"
        create: yes
      delegate_to: localhost
      vars:
        ansible_connection: local
      when: auth_result is succeeded

    - name: Create detailed connection report
      copy:
        content: |
          Authentication: {{ 'SUCCESS' if auth_result is succeeded else 'FAILED' }}
          
          Device Information:
          - Hostname: {{ auth_result.meta.results.hostname | default('Unknown') }}
          - Version: {{ auth_result.meta.results.version | default('Unknown') }}
          - Serial: {{ auth_result.meta.results.serial | default('Unknown') }}
          
          Started by: {{ awx_user_name | default(ansible_user_id) }}
        dest: "/tmp/fortinet-connection-{{ inventory_hostname }}-{{ ansible_date_time.epoch }}.log"
      delegate_to: localhost
      vars:
        ansible_connection: local
      when: auth_result is succeeded

    - name: Fail if authentication was unsuccessful
      fail:
        msg: "Failed to authenticate to {{ inventory_hostname }}"
      when: auth_result is failed

- name: Connection summary and cleanup
  hosts: localhost
  gather_facts: false
  connection: local
  become: false
  
  tasks:
    - name: Generate connection summary
      set_fact:
        connection_summary:
          job_id: "{{ awx_job_id | default('N/A') }}"
          started_by: "{{ awx_user_name | default(ansible_user_id) }}"
          target_hosts: "{{ groups[fortinet_hosts] if fortinet_hosts != 'all' else groups['all'] }}"
          total_hosts: "{{ (groups[fortinet_hosts] if fortinet_hosts != 'all' else groups['all']) | length }}"
          completion_time: "{{ ansible_date_time.iso8601 }}"
          vdom: "{{ vdom }}"

    - name: Display connection summary
      debug:
        msg:
          - "=== AAP 2.5 Fortinet Connection Summary ==="
          - "Job ID: {{ connection_summary.job_id }}"
          - "Started by: {{ connection_summary.started_by }}"
          - "Total Devices: {{ connection_summary.total_hosts }}"
          - "VDOM: {{ connection_summary.vdom }}"
          - "Completion Time: {{ connection_summary.completion_time }}"
      tags: [always]
