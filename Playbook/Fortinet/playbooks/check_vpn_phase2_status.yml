---
- name: Check VPN Phase 2 Status
  hosts: "{{ target_hosts }}"
  gather_facts: no
  connection: httpapi
  become: no
  vars:
    ansible_network_os: fortinet.fortios.fortios
    ansible_httpapi_use_ssl: true
    ansible_httpapi_validate_certs: false
    ansible_httpapi_port: 443
    vdom: "{{ vdom | default('root') }}"
    vpn_name: "{{ vpn_name | default('vpn1') }}"
  tasks:
    - name: Get VPN Phase 2 status
      fortinet.fortios.fortios_monitor_fact:
        vdom: "{{ vdom }}"
        access_token: "{{ ansible_password | default(fortinet_api_token) }}"
        selector: 'vpn_ipsec'
      register: vpn_phase2
    - name: Extract VPN Phase 2 status and set workflow facts
      set_fact:
        vpn_found: >-
          {{ (vpn_phase2.meta.results | default([]) | selectattr('name', 'search', vpn_name) | list | length > 0) }}
        vpn_status: >-
          {%- set phase2_list = (vpn_phase2.meta.results | default([]) | selectattr('name', 'search', vpn_name) | list) -%}
          {%- if phase2_list -%}
            {%- set phase2 = phase2_list[0] -%}
            {{- phase2.proxyid[0].status if phase2.proxyid and phase2.proxyid|length > 0 else 'unknown' -}}
          {%- else -%}
            not_found
          {%- endif -%}
        vpn_is_up: >-
          {%- set phase2_list = (vpn_phase2.meta.results | default([]) | selectattr('name', 'search', vpn_name) | list) -%}
          {%- if phase2_list -%}
            {%- set phase2 = phase2_list[0] -%}
            {%- set status = phase2.proxyid[0].status if phase2.proxyid and phase2.proxyid|length > 0 else 'unknown' -%}
            {{- (status == 'up') | bool -}}
          {%- else -%}
            {{- false -}}
          {%- endif -%}
        vpn_details: "{{ vpn_phase2.meta.results | selectattr('name', 'search', vpn_name) | list | first | default({}) }}"

    - name: Show VPN Phase 2 status results
      debug:
        msg:
          - "=============================="
          - "VPN {{ vpn_name }} Phase 2 Status Check"
          - "=============================="
          - "VPN Found: {{ vpn_found }}"
          - "VPN Status: {{ vpn_status | upper }}"
          - "VPN Is Up: {{ vpn_is_up }}"
          - "Workflow Result: {{ 'SUCCESS' if vpn_is_up else 'FAILED' }}"
          - ""
          - "VPN Details: {{ vpn_details }}"

    - name: Fail task if VPN Phase 2 is down (for workflow control)
      fail:
        msg: "VPN {{ vpn_name }} Phase 2 is {{ vpn_status | upper }} - Workflow failed"
      when: vpn_found and (vpn_status | trim) != 'up'

    - name: Fail task if VPN Phase 2 not found
      fail:
        msg: "VPN {{ vpn_name }} Phase 2 not found in FortiGate configuration"
      when: not vpn_found
