---
# AAP 2.5 Execution Environment Compatible Linux Patching Role
# Optimized for execution environments with proper error handling

- name: Display Linux patching information
  ansible.builtin.debug:
    msg:
      - "Starting Linux patching for {{ inventory_hostname }}"
      - "OS Family: {{ ansible_os_family }}"
      - "Distribution: {{ ansible_distribution }} {{ ansible_distribution_version }}"
      - "Excluded packages: {{ linux_exclude_packages | default('None') }}"

- name: Update package cache (RedHat family)
  ansible.builtin.dnf:
    update_cache: true
  when: ansible_os_family == "RedHat"
  become: true

- name: Update package cache (Debian family)
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
  when: ansible_os_family == "Debian"
  become: true

- name: Install security updates (RedHat family)
  ansible.builtin.dnf:
    name: "*"
    state: latest
    security: true
    exclude: "{{ linux_exclude_packages.split(',') if linux_exclude_packages else omit }}"
  when: ansible_os_family == "RedHat"
  become: true
  register: redhat_patching_result

- name: Install updates (Debian family)
  ansible.builtin.apt:
    upgrade: safe
    autoremove: true
    autoclean: true
    exclude: "{{ linux_exclude_packages.split(',') if linux_exclude_packages else omit }}"
  when: ansible_os_family == "Debian"
  become: true
  register: debian_patching_result

- name: Check if reboot is required (RedHat family)
  ansible.builtin.command: needs-restarting -r
  register: redhat_reboot_check
  failed_when: redhat_reboot_check.rc > 1
  changed_when: redhat_reboot_check.rc == 1
  when: ansible_os_family == "RedHat"

- name: Check if reboot is required (Debian family)
  ansible.builtin.stat:
    path: /var/run/reboot-required
  register: debian_reboot_check
  when: ansible_os_family == "Debian"

- name: Set reboot required fact for RedHat
  ansible.builtin.set_fact:
    patching_reboot_required: true
  when:
    - ansible_os_family == "RedHat"
    - redhat_reboot_check.rc == 1

- name: Set reboot required fact for Debian
  ansible.builtin.set_fact:
    patching_reboot_required: true
  when:
    - ansible_os_family == "Debian"
    - debian_reboot_check.stat.exists

- name: Display patching results
  ansible.builtin.debug:
    msg:
      - "Linux patching completed for {{ inventory_hostname }}"
      - "Reboot required: {{ patching_reboot_required | default(false) }}"
      - "Updates applied: {{ 'Yes' if (redhat_patching_result.changed | default(false)) or (debian_patching_result.changed | default(false)) else 'No' }}"
