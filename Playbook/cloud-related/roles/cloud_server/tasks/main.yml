---
# tasks file for cloud_server
- name: Set cloud provider fact
  set_fact:
    selected_cloud: "{{ cloud_provider | lower }}"

- name: Provision AWS EC2 Instance
  when: selected_cloud == 'aws'
  amazon.aws.ec2_instance:
    name: "{{ server_name }}"
    image_id: "{{ image_id }}"
    instance_type: "{{ instance_type }}"
    region: "{{ region }}"
    state: present
  register: aws_instance_result

- name: Provision Azure VM
  when: selected_cloud == 'azure'
  azure.azcollection.azure_vm:
    resource_group: "{{ resource_group }}"
    name: "{{ server_name }}"
    vm_size: "{{ instance_type }}"
    admin_username: "{{ admin_username | default('azureuser') }}"
    image:
      offer: "{{ image_offer | default('UbuntuServer') }}"
      publisher: "{{ image_publisher | default('Canonical') }}"
      sku: "{{ image_sku | default('18.04-LTS') }}"
      version: "{{ image_version | default('latest') }}"
    location: "{{ region }}"
    state: present
  register: azure_vm_result

- name: Provision GCP Compute Instance
  when: selected_cloud == 'gcp'
  google.cloud.gcp_compute_instance:
    name: "{{ server_name }}"
    machine_type: "{{ instance_type }}"
    zone: "{{ region }}"
    disks:
      - auto_delete: true
        boot: true
        initialize_params:
          source_image: "{{ image_id }}"
    network_interfaces:
      - network: default
    project: "{{ gcp_project }}"
    state: present
  register: gcp_instance_result

- name: Show result
  debug:
    msg: |
      {% if selected_cloud == 'aws' %}
        AWS EC2 Instance: {{ aws_instance_result }}
      {% elif selected_cloud == 'azure' %}
        Azure VM: {{ azure_vm_result }}
      {% elif selected_cloud == 'gcp' %}
        GCP Compute Instance: {{ gcp_instance_result }}
      {% else %}
        No valid cloud provider selected.
      {% endif %}
